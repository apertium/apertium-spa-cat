! POS

adj: _.adj_type.superlative.gender.number ;
adv: _.adv_type ;
det: _.adj_type.gender.number ;
n: _.acronym.gender.number ;
num: _.gender.number ;
num_digits: _ ;
np: _.np_type.gender.number ;
preadv: _ ;
predet: _.adj_type.gender.number ;
vb: _.tense.person.number ;
vb_impers: _.tense ;
vb_pp: _.tense.gender.number ;

SAdj: _.adj_type.superlative.gender_chunk.number_chunk ;
SAdv: _.adv_type ;
SDet: _.adj_type.gender_chunk.number_chunk ;
SN: _.SN_det.np_type.person.gender_chunk.number_chunk ;
SNum: _.gender_chunk.number ;
SV: _.vb_type.vb_cnj.tense.person.gender_chunk.number_chunk ;


! Attributes

acronym = acr ;
adj_type = def dem ind ord pos itg ;
adv_type = itg ;
superlative = sup ;
gender = (GD m) m f nt @mf GD ;
gender_chunk = (GD m) m f GD ;
np_type = ant cog al top loc ;
number = (ND sg) sg pl @sp ND ;
number_chunk = (ND sg) sg pl ND ;
person = (PD p3) p1 p2 p3 PD ;
tense = pri fti cni imp prs pis fts pii ifi inf ger pp ;
tense_cnj = pri fti cni imp prs pis fts pii ifi ;
tense_impers = inf ger pp ;
vb_type = vbhaver vblex vbmod vbser ;
vb_cnj = cnj impers ;

SN_det = undet det predet nodet prnpers ;

gender>gender_chunk: mf GD, nt GD ;
gender_chunk>gender: GD GD ;
number>number_chunk: sp ND ;
number_chunk>number: ND ND ;


! Rules

SAdj -> 1: %adj
                { %1 } |

        1: SAdv %SAdj
                { 1 _ %2 } ;

SAdv -> 1: %adv
                { 1 } |

        1: %preadv
                { 1 } ;

SDet -> 1: %det
                { %1 } ;

SN ->   1: %n
                [$SN_det=undet]
                { %1[acronym=1.acronym/tl] } | ! Això està pendent d'arreglar a https://github.com/apertium/apertium-recursive/issues/79

        1: %np
                [$SN_det=undet]
                { %1 } |

        3: %SN SAdj
                [$gender_chunk=(if(1.gender=GD)2.gender else 1.gender),$number_chunk=(if(1.number=ND)2.number else 1.number)]
                { %1 _ 2[gender=$gender,number=$number] } |

        2: SAdj %SN
                [$gender_chunk=(if(2.gender=GD)1.gender else 2.gender),$number_chunk=(if(2.number=ND)1.number else 2.number)]
                { 1[gender=$gender,number=$number] _ %2 } |

        1: SDet %SN.undet
                [$SN_det=det,$gender_chunk=(if(2.gender=GD)1.gender else 2.gender),$number_chunk=(if(2.number=ND)1.number else 2.number)]
                { 1[gender=$gender,number=$number] _ %2 } |

        1: predet %SN
                [$SN_det=predet,$gender_chunk=(if(2.gender=GD)1.gender else 2.gender),$number_chunk=(if(2.number=ND)1.number else 2.number)]
                { 1[gender=$gender,number=$number] _ %2 } |

        1: SNum %SN.undet
                [$gender_chunk=(if(2.gender=GD)1.gender else 2.gender),$number=(if(2.number=ND)1.number else 2.number)]
                { 1[gender=$gender] _ %2 } ;

SNum -> 0: %num
                { %1(num_digits) } |
        1: %num.[gender]
                { %1 } |
        2: SNum %SNum
                { 1 _ %2 } ;

SV ->   1: %vblex.[tense_cnj]
                [$vb_cnj=cnj]
                { %1(vb) } |

        1: %vblex.[tense_impers]
                [$vb_cnj=impers]
                { (if($tense=pp)
                        %1(vb_pp)
                else-if($vb_cnj=impers)
                        %1(vb_impers)
                else
                        %1(vb)[lemcase=$lemcase]) } |

        1: %vbser.[tense_cnj]
                [$vb_cnj=cnj]
                { %1(vb) } |

        1: %vbser.[tense_impers]
                [$vb_cnj=impers]
                { (if($tense=pp)
                        %1(vb_pp)
                else-if($vb_cnj=impers)
                        %1(vb_impers)
                else
                        %1(vb)[lemcase=$lemcase]) } |

        1: %vbhaver.[tense_cnj]
                [$vb_cnj=cnj]
                { %1(vb) } |

        1: %vbhaver.[tense_impers]
                [$vb_cnj=impers]
                { (if($tense=pp)
                        %1(vb_pp)
                else-if($vb_cnj=impers)
                        %1(vb_impers)
                else
                        %1(vb)[lemcase=$lemcase]) } |

        1: %vbmod.[tense_cnj]
                [$vb_cnj=cnj]
                { %1(vb) } |

        1: %vbmod.[tense_impers]
                [$vb_cnj=impers]
                { (if($tense=pp)
                        %1(vb_pp)
                else-if($vb_cnj=impers)
                        %1(vb_impers)
                else
                        %1(vb)[lemcase=$lemcase]) } |

        1: ir@SV.[vb_type].cnj.pri.$person.$gender_chunk.$number_chunk.$lemcase %SV.[vb_type].impers.inf
                [$vb_cnj=cnj,$tense=ifi]
                { %2[lemcase=$lemcase] } ;
